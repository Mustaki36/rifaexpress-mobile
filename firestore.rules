rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Allow public read access for raffles, but restrict writes.
    match /raffles/{raffleId} {
      allow read: if true;
      allow create: if request.auth != null && (get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.role == 'creator' || get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.role == 'admin');
      allow update, delete: if request.auth != null && get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.role == 'admin';
    }

    // Users can only manage their own data. Admins can read all user data.
    match /usuarios/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.role == 'admin');
      allow create: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow delete: if request.auth != null && get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Only authenticated users can reserve tickets.
    match /reservations/{reservationId} {
      allow read, create, delete: if request.auth != null;
    }
    
    // Results are public, but only admins can create/delete them.
    match /results/{resultId} {
      allow read: if true;
      allow create, delete: if request.auth != null && get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Blocked users list is only accessible to admins.
    match /blockedUsers/{blockedId} {
      allow read, create, update, delete: if request.auth != null && get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
