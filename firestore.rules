
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isAdmin() {
      return request.auth.token.role == 'admin';
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    match /usuarios/{userId} {
      // Admins can read/write any user document.
      // Users can only read/write their own document.
      allow read, write: if isAdmin() || isOwner(userId);
      // Admins can create new user documents
      allow create: if isAdmin();
    }
    
    match /raffles/{raffleId} {
      // Anyone can read raffles
      allow read: if true;
      // Only admins or users with the 'creator' role can create raffles
      allow create: if request.auth != null && (isAdmin() || request.auth.token.role == 'creator');
      // Only admins or the original creator can update/delete a raffle
      allow update, delete: if isAdmin() || (request.auth.uid == resource.data.creatorId);
    }
    
    match /reservations/{reservationId} {
        // Anyone can read reservations to see what's taken
        allow read: if true;
        // Only authenticated users can create reservations for themselves
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
        // Only the user who made the reservation can delete it
        allow delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    match /results/{resultId} {
        // Anyone can see past results
        allow read: if true;
        // Only admins can add or delete results
        allow create, delete: if isAdmin();
    }
    
    match /blockedUsers/{blockedId} {
        // Only admins can manage the block list
        allow read, write, create, delete: if isAdmin();
    }

  }
}
