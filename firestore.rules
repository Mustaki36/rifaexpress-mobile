rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Public read access for raffles and results
    match /raffles/{raffleId} {
      allow read: if true;
      allow write: if request.auth != null; // Authenticated users can write (create, update, delete)
    }

    match /results/{resultId} {
      allow read: if true;
      allow write: if false; // Results should be created server-side, not by clients
    }

    // Authenticated users can manage their own reservations
    match /reservations/{reservationId} {
        allow read, write: if request.auth != null;
    }

    // Authenticated users can read/write to their own user document
    match /usuarios/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      // Allow creation for new users
      allow create: if request.auth != null;
    }

    // No client should be able to read the entire blockedUsers list for privacy.
    // This should be managed by trusted server code or admin SDK.
    // For the purpose of this app where admin is a mock user, we relax it slightly.
    match /blockedUsers/{docId} {
        allow read, write: if request.auth != null; // For simplicity, any auth user. In prod, lock to admin.
    }
  }
}
