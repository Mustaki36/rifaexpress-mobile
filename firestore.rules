
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.role == 'admin';
    }

    // Riffles: Public read, only authenticated users can create/update
    match /raffles/{raffleId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth.uid == resource.data.creatorId || isAdmin();
      allow delete: if request.auth.uid == resource.data.creatorId || isAdmin();
    }

    // Results: Public read-only
    match /results/{resultId} {
      allow read: if true;
      allow write: if isAdmin(); // Only admins can create/delete results
    }

    // Users: Can only read/write their own data, unless they are admin
    match /usuarios/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      allow create: if request.auth.uid == userId;
      allow update, delete: if request.auth.uid == userId || isAdmin();
    }
    
    match /usuarios/{document=**} {
      allow list: if isAdmin();
    }

    // Reservations: Only authenticated users can manage their reservations
    match /reservations/{reservationId} {
      allow read, write: if request.auth != null;
    }

    // Blocked Users: Only readable/writable by admin
    match /blockedUsers/{blockedId} {
      allow read, write: if isAdmin();
    }
  }
}
